name: MCP Server Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Setup test database
        run: |
          # Create a test database URL
          echo "DATABASE_URL=file:./test.db" >> .env
          # Push the schema to create the test database
          npm run db:push

      - name: Set up environment variables
        run: |
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "MCP_MODE=streaming-http" >> .env
          echo "PORT=4000" >> .env
          echo "DISABLE_AUTO_TESTS=true" >> .env

      - name: Build the project
        run: npm run build

      - name: Start MCP server in background
        run: |
          npm run streaming-http:no-tests &
          sleep 10
          # Check if server is running
          curl -f http://localhost:4000/ || exit 1

      - name: Run protocol tests
        run: npm run test:protocol

      - name: Run contact tests
        run: npm run test:contacts

      - name: Run streaming tests
        run: npm run test:streaming

      - name: Cleanup
        if: always()
        run: |
          pkill -f "tsx src/mcpServer.ts" || true
          pkill -f "node dist/mcpServer.js" || true
